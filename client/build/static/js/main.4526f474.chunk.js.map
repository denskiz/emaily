{"version":3,"sources":["actions/types.js","actions/index.js","google.svg","components/Header.js","components/Landing.js","components/surveys/SurveyList.js","components/surveys/SurveyDetail.js","components/surveys/Surveys.js","components/Dashboard.js","components/surveys/validateEmails.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","components/Payments.js","components/Credits.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/formDataReducer.js","reducers/surveysReducer.js","reportWebVitals.js","index.js"],"names":["FETCH_USER","FETCH_SURVEYS","FORM_DATA","fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","fetchSurveys","submitSurvey","values","then","alert","catch","error","request","status","console","log","formData","connect","auth","className","to","style","listStyle","href","src","Google","alt","renderContent","Landing","SurveyList","surveys","onDetailsClick","length","scope","map","item","id","_id","title","subject","Date","dateSent","toLocaleDateString","onClick","e","target","parentNode","SurveyDetail","onReturnClick","currentSurvey","body","yes","no","labels","datasets","label","backgroundColor","options","display","text","fontSize","legend","position","useState","showSurveyDetail","surveyId","setdata","useEffect","find","elem","Dashboard","re","validateEmails","emails","split","email","trim","filter","test","state","PreviousformData","onSurveySubmit","useForm","mode","defaultValues","register","handleSubmit","errors","formState","onSubmit","for","required","color","validate","recipients","formValues","actions","onCancel","SurveyNew","showFormReview","setShowFormReview","SurveyFormReview","props","name","description","amount","stripeKey","role","credits","basename","path","element","combineReducers","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8hBAAaA,EAAa,aACbC,EAAgB,gBAChBC,EAAY,YCCZC,EAAY,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEAGXC,IAAMC,IAAI,qBAHC,OAGvBC,EAHuB,OAK7BJ,EAAS,CAAEK,KAAMT,EAAYU,QAASF,EAAIG,OALb,2CAAN,uDAQZC,EAAc,SAACC,GAAD,8CAAW,WAAOT,GAAP,eAAAC,EAAA,sEAClBC,IAAMQ,KAAK,cAAeD,GADR,OAC9BL,EAD8B,OAGpCJ,EAAS,CAAEK,KAAMT,EAAYU,QAASF,EAAIG,OAHN,2CAAX,uDAMdI,EAAe,yDAAM,WAAOX,GAAP,eAAAC,EAAA,sEACdC,IAAMC,IAAI,gBADI,OAC1BC,EAD0B,OAGhCJ,EAAS,CAAEK,KAAMR,EAAeS,QAASF,EAAIG,OAHb,2CAAN,uDAMfK,EAAe,SAACC,GAAD,8CAAY,WAAOb,GAAP,SAAAC,EAAA,sDAKtCC,IACGQ,KAAK,eAAgBG,GACrBC,MAAK,SAACV,GAELJ,EAAS,CAAEK,KAAMT,EAAYU,QAASF,EAAIG,OAC1CQ,MAAM,2BAEPC,OAAM,SAACC,GACuB,MAAzBA,EAAMC,QAAQC,OAChBJ,MAAM,mDAGNK,QAAQC,IAAIJ,MAjBoB,2CAAZ,uDAuBfK,EAAW,SAACf,GACvB,MAAO,CAAEF,KAAMP,EAAWQ,QAASC,IC/CtB,MAA0B,mC,gBC6D1BgB,mBAJf,YACE,MAAO,CAAEC,KADwB,EAARA,QAIZD,EAxDA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAuChB,OACE,qBAAKC,UAAU,+BAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,eAAC,IAAD,CAAMC,GAAIF,EAAO,WAAa,IAAKC,UAAU,eAA7C,UACE,mBAAGA,UAAU,mBACZ,KAFH,YAzCN,WACE,OAAQD,GACN,KAAK,KACH,OACF,KAAK,EACH,OACE,oBAAIG,MAAO,CAAEC,UAAW,QAAUH,UAAU,WAA5C,SACE,oBAAGI,KAAK,eAAeJ,UAAU,kBAAjC,UACE,qBAAKA,UAAU,SAASK,IAAKC,EAAQC,IAAI,WACzC,mBAAGP,UAAU,QAAb,oCAIR,QACE,OACE,qBAAIA,UAAU,0BAAd,UACE,oBAAYA,UAAU,WAAtB,SACE,cAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,WAA9B,sBADM,KAMR,oBAAYA,UAAU,WAAtB,SACE,cAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,WAA9B,sBADM,KAMR,oBAAYA,UAAU,WAAtB,SACE,mBAAGI,KAAK,cAAcJ,UAAU,WAAhC,qBADM,SAiBXQ,WCTMC,G,OAxCC,WACd,OACE,qCACE,sBAAKT,UAAU,yBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,oBACA,0EAGJ,uBACA,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,gDAEF,oBAAIA,UAAU,kBAAd,gDAGA,oBAAIA,UAAU,kBAAd,wDAGA,oBAAIA,UAAU,kBAAd,4EAGA,oBAAIA,UAAU,kBAAd,2IAQR,oBAAIA,UAAU,cAAd,wBACA,mBAAGA,UAAU,cAAb,2C,iBCqBSU,EA1DI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAkC7B,OACE,qCACE,qBAAIZ,UAAU,mBAAd,wBACcW,EAAQE,OADtB,IAC+BF,EAAQE,OAAS,EAAI,UAAY,YAEhE,wBAAOb,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAIc,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMd,UAAU,qBAA1B,qBAGA,oBAAIc,MAAM,MAAV,0BACA,4BAGJ,gCACE,mCAjDFH,EAAQE,OAAS,EACZF,EAAQI,KAAI,SAACC,GAClB,OACE,qBAAmBC,GAAID,EAAKE,IAA5B,UACE,6BAAKF,EAAKG,QACV,oBAAInB,UAAU,qBAAd,SAAoCgB,EAAKI,UACzC,6BAAK,IAAIC,KAAKL,EAAKM,UAAUC,uBAC7B,6BACE,wBACEvB,UAAU,eACVwB,QAAS,SAACC,GAERb,EAAea,EAAEC,OAAOC,WAAWA,WAAWV,KAJlD,yBALKD,EAAKE,QAoBhB,+BACE,sDACA,uBACA,qC,QC8DKU,EAxFM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cA2ErC,OACE,mCACE,yBAAS9B,UAAU,uCAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,UAAf,SArCN,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,iDACA,sBAAKA,UAAU,WAAf,wBACc,GACX,IAAIqB,KAAKS,EAAcR,UAAUC,qBAAsB,UAG5D,sBAAKvB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,mBAAGA,UAAU,YAAb,SAA0B8B,EAAcX,QACxC,oBAAInB,UAAU,aAAd,qBACA,mBAAGA,UAAU,YAAb,SAA0B8B,EAAcV,UACxC,oBAAIpB,UAAU,aAAd,kBACA,mBAAGA,UAAU,YAAb,SAA0B8B,EAAcC,OACxC,wBACE/B,UAAU,kBACVwB,QAAS,SAACC,GACRI,KAHJ,yBAUJ,qBAAK7B,UAAU,WAAf,SApED8B,EAAcE,KAAQF,EAAcG,GASrC,cAAC,IAAD,CACEnD,KAAM,CACJoD,OAAQ,CAAC,MAAD,MACRC,SAAU,CACR,CACEC,MAAO,mBACPtD,KAAM,CAACgD,EAAcE,IAAKF,EAAcG,IACxCI,gBAAiB,CACf,wBACA,2BAKRC,QAAS,CACPnB,MAAO,CACLoB,SAAS,EACTC,KAAM,kBACNC,SAAU,IAEZC,OAAQ,CACNH,SAAS,EACTI,SAAU,aA7BhB,qCACE,mDACA,2E,OC+DK7C,mBAJf,YACE,MAAO,CAAEa,QAD2B,EAAXA,WAIa,CAAEzB,gBAA3BY,EAhEf,YAA6C,IAA1BZ,EAAyB,EAAzBA,aAAcyB,EAAW,EAAXA,QAC/B,EAAwBiC,mBAAS,CAAEC,kBAAkB,EAAOC,SAAU,KAAtE,mBAAOhE,EAAP,KAAaiE,EAAb,KAwDA,OAtDAC,qBAAU,WACR9D,MACC,CAACA,IAoDG,8BANH,gCA1CA,sBAAKc,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,qBACA,oBAAGA,UAAU,cAAb,oDAEE,uBAFF,uGAiBClB,EAAK+D,iBAWN,cAAC,EAAD,CACEf,eAAkChD,EAAKgE,SAlBtCnC,EAAQsC,MAAK,SAACC,GACnB,GAAIA,EAAKhC,MAAQpC,EAAKgE,SAAU,MAAO,CAACI,OAkBpCrB,cAAe,WACb,OAAOkB,EAAQ,CAAEF,kBAAkB,EAAOC,SAAU,QAZxD,cAAC,EAAD,CACElC,eAAgB,SAACK,GACf,OAAO8B,EAAQ,CAAEF,kBAAkB,EAAMC,SAAU7B,KAErDN,QAASA,YCxBJwC,EAbG,WAChB,OACE,gCACE,cAAC,EAAD,IACA,qBAAKnD,UAAU,mBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,iBAAlC,SACE,qD,gBCVJoD,EACJ,4EAeaC,EAZQ,SAACC,GAMtB,OALsBA,EACnBC,MAAM,KACNxC,KAAI,SAACyC,GAAD,OAAWA,EAAMC,UACrBC,QAAO,SAACF,GAAD,OAA8B,IAAnBJ,EAAGO,KAAKH,MAEX3C,QCgGLf,eAHS,SAAC8D,GACvB,MAAO,CAAEC,iBAAkBD,EAAM/D,YAEK,CAAEA,YAA3BC,EAnGI,SAAC,GAAoD,IAAD,QAAjDgE,EAAiD,EAAjDA,eAAgBjE,EAAiC,EAAjCA,SAAUgE,EAAuB,EAAvBA,iBAC9C,EAIIE,YAAQ,CACVC,KAAM,SACNC,cAAeJ,IALfK,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAWf,OACE,uBAAME,SAAUH,GAND,SAACrF,GAChBgF,IACAjE,EAASf,MAIT,UACE,sBAAKkB,UAAU,OAAf,UACE,uBAAOuE,IAAI,QAAQvE,UAAU,aAA7B,0BAGA,mCACEpB,KAAK,OACLqC,GAAG,QACHjB,UAAU,gBACNkE,EAAS,QAAS,CAAEM,UAAU,MAEpC,qBAAKtE,MAAO,CAAEuE,MAAO,OAArB,SAC0B,cAAvB,UAAAL,EAAOjD,aAAP,eAAcvC,OACb,uCAGN,sBAAKoB,UAAU,OAAf,UACE,uBAAOuE,IAAI,UAAUvE,UAAU,aAA/B,0BAGA,mCACEpB,KAAK,OACLqC,GAAG,UACHjB,UAAU,gBACNkE,EAAS,UAAW,CAAEM,UAAU,MAEtC,qBAAKtE,MAAO,CAAEuE,MAAO,OAArB,SAC4B,cAAzB,UAAAL,EAAOhD,eAAP,eAAgBxC,OACf,uCAGN,sBAAKoB,UAAU,OAAf,UACE,uBAAOuE,IAAI,OAAOvE,UAAU,aAA5B,wBAGA,mCACEpB,KAAK,OACLqC,GAAG,OACHjB,UAAU,gBACNkE,EAAS,OAAQ,CAAEM,UAAU,MAEnC,qBAAKtE,MAAO,CAAEuE,MAAO,OAArB,SACyB,cAAtB,UAAAL,EAAOrC,YAAP,eAAanD,OAAuB,qCAGzC,sBAAKoB,UAAU,OAAf,UACE,uBAAOuE,IAAI,aAAavE,UAAU,aAAlC,kCAGA,mCACEpB,KAAK,OACLqC,GAAG,aACHjB,UAAU,gBACNkE,EAAS,aAAc,CACzBQ,SAAUrB,MAGd,qBAAKpC,GAAG,YAAYjB,UAAU,YAA9B,uDAGA,qBAAKE,MAAO,CAAEuE,MAAO,OAArB,SAC+B,cAA5B,UAAAL,EAAOO,kBAAP,eAAmB/F,OAAuB,gCAI/C,eAAC,IAAD,CAAMoB,UAAU,iBAAiBC,GAAG,WAApC,UACE,mBAAGD,UAAU,eACZ,KAFH,YAMA,yBAAQpB,KAAK,SAASoB,UAAU,4BAAhC,UACE,mBAAGA,UAAU,wBACZ,KAFH,gBC7CSF,eAJS,SAAC8D,GACvB,MAAO,CAAEgB,WAAYhB,EAAM/D,YAGWgF,EAAzB/E,EA3CM,SAAC,GAA4C,IAA1CgF,EAAyC,EAAzCA,SAAUF,EAA+B,EAA/BA,WAAYzF,EAAmB,EAAnBA,aAC5C,OACE,gCACE,6DACA,gCACE,uBAAOa,UAAU,YAAjB,0BACA,8BAAM4E,EAAWzD,WAEnB,gCACE,uBAAOnB,UAAU,YAAjB,0BACA,8BAAM4E,EAAWxD,aAEnB,gCACE,uBAAOpB,UAAU,YAAjB,wBACA,8BAAM4E,EAAW7C,UAEnB,gCACE,uBAAO/B,UAAU,YAAjB,kCACA,8BAAM4E,EAAWD,gBAEnB,uBACA,yBAAQnD,QAASsD,EAAU9E,UAAU,iBAArC,UACE,sBAAMA,UAAU,YAAhB,SACE,mBAAGA,UAAU,6BAEd,KAJH,UAOA,eAAC,IAAD,CACEA,UAAU,4BACVwB,QAAS,kBAAMrC,EAAayF,IAC5B3E,GAAG,IAHL,UAKE,mBAAGD,UAAU,wBALf,IAK2C,KAL3C,uBCCS+E,EA9BG,WAChB,MAA4CnC,oBAAS,GAArD,mBAAOoC,EAAP,KAAuBC,EAAvB,KAUA,OACE,qBAAKjF,UAAU,gCAAf,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,+BACA,mBAAGA,UAAU,cAAb,SACGgF,EACG,sCACA,0CAdNA,EACK,cAACE,EAAD,CAAkBJ,SAAU,kBAAMG,GAAkB,MAGtD,cAAC,EAAD,CAAYnB,eAAgB,kBAAMmB,GAAkB,MAavD,uBACA,uBACA,uBACA,6B,iBCVOnF,cAAQ,KAAM+E,EAAd/E,EAfE,SAACqF,GAChB,OACE,cAAC,IAAD,CACEC,KAAK,SACLC,YAAY,yBACZC,OAAQ,IACRtG,MAAO,SAACA,GAAD,OAAWmG,EAAMpG,YAAYC,IAEpCuG,UAAU,mCANZ,SAQE,wBAAQvF,UAAU,kBAAlB,8BC6ESF,mBALf,YACE,MAAO,CACLC,KAF+B,EAARA,QAKZD,EAxFC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAgFjB,OAAO,mCAZH,qCAzDA,qBAAKC,UAAU,mBAAmBwF,KAAK,QAAvC,wEA2DE,yBAASxF,UAAU,UAAnB,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SArDN,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,wBACA,mBAAGA,UAAU,YAAb,kHAIA,mBAAGA,UAAU,YAAb,mGAIA,+BACE,6BACE,6DAEF,6BACE,4EAEF,6BACE,4EAEF,6BACE,sEAGJ,4BACE,oGA4BA,qBAAKA,UAAU,aAAf,SApBN,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,qCACE,qDAvDJD,EACK,+BAAOA,EAAK0F,UAEZ,6CAsDH,wBAAQzF,UAAU,kBAAlB,SACE,cAAC,EAAD,0BC7BGF,cAAQ,KAAM+E,EAAd/E,EAtBH,SAACqF,GAKX,OAJAnC,qBAAU,WACRmC,EAAM7G,eAIN,eAAC,IAAD,CAAeoH,SAAS,IAAxB,UACE,cAAC,EAAD,IACA,sBAAK1F,UAAU,YAAf,UACE,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2F,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,kBCrB/BC,cAAgB,CAC7B9F,KCLa,WAAiC,IAAvB6D,EAAsB,uDAAd,KAAMkC,EAAQ,uCAC7C,OAAQA,EAAOlH,MACb,KAAKT,EAEH,OAAO2H,EAAOjH,UAAW,EAC3B,QACE,OAAO+E,IDAV/D,SENY,WAA+B,IAArB+D,EAAoB,uDAAZ,GAAIkC,EAAQ,uCAC3C,OAAQA,EAAOlH,MACb,KAAKP,EACH,OAAOyH,EAAOjH,QAChB,QACE,OAAO+E,IFEXjD,QGPa,WAA+B,IAArBiD,EAAoB,uDAAZ,GAAIkC,EAAQ,uCAC3C,OAAQA,EAAOlH,MACb,KAAKR,EACH,OAAO0H,EAAOjH,QAEhB,QACE,OAAO+E,MCIEmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5G,MAAK,YAAkD,IAA/C6G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGRO,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YACZC,EACA,GACAN,EAAiBO,YAAgBC,OAEnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.4526f474.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';\nexport const FETCH_SURVEYS = \"fetch_surveys\";\nexport const FORM_DATA = \"form_data\";","import axios from 'axios';\nimport { FETCH_USER, FETCH_SURVEYS, FORM_DATA } from \"./types\";\n\nexport const fetchUser = () => async (dispatch) => {\n  // in production there is no proxy and a request to api/current_user\n  // goes directly\n  const res = await axios.get(\"/api/current_user\");\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const handleToken = (token) => async (dispatch) => {\n  const res = await axios.post(\"/api/stripe\", token);\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const fetchSurveys = () => async (dispatch) => {\n  const res = await axios.get(\"/api/surveys\");\n\n  dispatch({ type: FETCH_SURVEYS, payload: res.data });\n};\n\nexport const submitSurvey = (values) => async (dispatch) => {\n  // const res = await axios.post(\"/api/surveys\", values);\n\n  // history.push(\"/surveys\");\n  // dispatch({ type: FETCH_USER, payload: res.data });\n  axios\n    .post(\"/api/surveys\", values)\n    .then((res) => {\n      // history.push(\"./\");\n      dispatch({ type: FETCH_USER, payload: res.data });\n      alert(\"Survey has been sent\");\n    })\n    .catch((error) => {\n      if (error.request.status === 403) {\n        alert(\"You do not have enough credits to send a survey\");\n        // history.push(\"/credits\");\n      } else {\n        console.log(error);\n        // history.push(\"/\");\n      }\n    });\n};\n\nexport const formData = (data) => {\n  return { type: FORM_DATA, payload: data };\n};","export default __webpack_public_path__ + \"static/media/google.bce8d3d6.svg\";","import { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Google from \"../google.svg\";\nimport \"./Header.css\";\n\nconst Header = ({ auth }) => {\n  function renderContent() {\n    switch (auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li style={{ listStyle: \"none\" }} className=\"nav-item\">\n            <a href=\"/auth/google\" className=\"login-container\">\n              <img className=\"google\" src={Google} alt=\"Google\" />\n              <p className=\"login\">Login with Google</p>\n            </a>\n          </li>\n        );\n      default:\n        return (\n          <ul className=\"nav justify-content-end\">\n            <li key=\"1\" className=\"nav-item\">\n              <Link to=\"/credits\" className=\"nav-link\">\n                Credits\n              </Link>\n            </li>\n\n            <li key=\"2\" className=\"nav-item\">\n              <Link to=\"/surveys\" className=\"nav-link\">\n                Surveys\n              </Link>\n            </li>\n\n            <li key=\"3\" className=\"nav-item\">\n              <a href=\"/api/logout\" className=\"nav-link\">\n                Logout\n              </a>\n            </li>\n          </ul>\n        );\n    }\n  }\n\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"container-fluid container\">\n        <Link to={auth ? \"/surveys\" : \"/\"} className=\"navbar-brand\">\n          <i className=\"bi bi-envelope\"></i>\n          {\"  \"}Emaily\n        </Link>\n        {renderContent()}\n      </div>\n    </nav>\n  );\n};\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import \"./Landing.css\";\n\nconst Landing = () => {\n  return (\n    <>\n      <div className=\"container text-center \">\n        <div className=\"wrapper\">\n          <div className=\"hero\">\n            <h1 className=\"text-center\">Emaily</h1>\n            <h3>Get Feedback from your users faster</h3>\n          </div>\n        </div>\n        <br />\n        <div className=\"row justify-content-center\">\n          <div className=\"col-6 \">\n            <ul className=\"list-group\">\n              <li className=\"list-group-item\">\n                <h2>Instructions</h2>\n              </li>\n              <li className=\"list-group-item\">\n                Purchase Credits to create Surveys\n              </li>\n              <li className=\"list-group-item\">\n                Create Surveys with a title and a question\n              </li>\n              <li className=\"list-group-item\">\n                Enter a comma-separated list of the recipient email addresses.\n              </li>\n              <li className=\"list-group-item\">\n                Send the survey and await feedback. Each emailer campaign's\n                response tally can be monitored in your user dashboard.\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <h4 className=\"text-center\">Tech Stack</h4>\n      <p className=\"text-center\">This app was built with:</p>\n    </>\n  );\n};\n\nexport default Landing;\n","const SurveyList = ({ surveys, onDetailsClick }) => {\n  function renderSurveys() {\n    if (surveys.length > 0) {\n      return surveys.map((item) => {\n        return (\n          <tr key={item._id} id={item._id}>\n            <td>{item.title}</td>\n            <td className=\"hide-on-small-only\">{item.subject}</td>\n            <td>{new Date(item.dateSent).toLocaleDateString()}</td>\n            <td>\n              <button\n                className=\"btn btn-info\"\n                onClick={(e) => {\n                  // targets the <tr id={item._id}>\n                  onDetailsClick(e.target.parentNode.parentNode.id);\n                }}\n              >\n                Details\n              </button>\n            </td>\n          </tr>\n        );\n      });\n    } else {\n      return (\n        <tr>\n          <td>No Surveys Available</td>\n          <td />\n          <td />\n        </tr>\n      );\n    }\n  }\n\n  return (\n    <>\n      <h5 className=\"text-center bold\">\n        Displaying {surveys.length} {surveys.length > 1 ? \"Surveys\" : \"Survey\"}\n      </h5>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\" className=\"hide-on-small-only\">\n              Subject\n            </th>\n            <th scope=\"col\">Date Created</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          <>{renderSurveys()}</>\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default SurveyList;\n","import { Pie } from \"react-chartjs-2\";\n\nconst SurveyDetail = ({ onReturnClick, currentSurvey }) => {\n  function renderChart() {\n    if (!currentSurvey.yes && !currentSurvey.no) {\n      return (\n        <>\n          <label>Survey Results</label>\n          <p>No Results available</p>\n        </>\n      );\n    } else {\n      return (\n        <Pie\n          data={{\n            labels: [`Yes`, `No`],\n            datasets: [\n              {\n                label: \"Survey Responses\",\n                data: [currentSurvey.yes, currentSurvey.no],\n                backgroundColor: [\n                  \"rgba(0, 200, 83, 0.8)\",\n                  \"rgba(213, 0, 0, 0.8)\",\n                ],\n              },\n            ],\n          }}\n          options={{\n            title: {\n              display: true,\n              text: \"Survey Results \",\n              fontSize: 25,\n            },\n            legend: {\n              display: true,\n              position: \"bottom\",\n            },\n          }}\n        />\n      );\n    }\n  }\n\n  function renderSurveyDetailsCard() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <div>Survey Details</div>\n          <div className=\"text-end\">\n            Posted On: {\"\"}\n            {new Date(currentSurvey.dateSent).toLocaleDateString()}{\" \"}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Title</h5>\n              <p className=\"card-text\">{currentSurvey.title}</p>\n              <h5 className=\"card-title\">Subject</h5>\n              <p className=\"card-text\">{currentSurvey.subject}</p>\n              <h5 className=\"card-title\">Body</h5>\n              <p className=\"card-text\">{currentSurvey.body}</p>\n              <button\n                className=\"btn btn-primary\"\n                onClick={(e) => {\n                  onReturnClick();\n                }}\n              >\n                Return\n              </button>\n            </div>\n          </div>\n          <div className=\"col-md-2\">{renderChart()}</div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <section className=\"section section-posts grey lighten-4\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col s12\">{renderSurveyDetailsCard()}</div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default SurveyDetail;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSurveys } from '../../actions';\nimport SurveyList from './SurveyList';\nimport SurveyDetail from './SurveyDetail';\nimport './SurveyList.css';\n\nfunction Surveys({ fetchSurveys, surveys }) {\n  const [data, setdata] = useState({ showSurveyDetail: false, surveyId: \"\" });\n\n  useEffect(() => {\n    fetchSurveys();\n  }, [fetchSurveys]);\n\n  function renderSurveyIntro() {\n    return (\n      <div className=\"container\">\n        <h4 className=\"text-center\">Surveys</h4>\n        <p className=\"text-center\">\n          Create and Track all your Surveys here.\n          <br />\n          To create a new Survey, click on the red New Survey Button on the\n          bottom right of your screen.\n        </p>\n      </div>\n    );\n  }\n\n  function renderSurveyDetail(surveyId) {\n    return surveys.find((elem) => {\n      if (elem._id === data.surveyId) return [elem];\n    });\n  }\n\n  function renderSurveys() {\n    if (!data.showSurveyDetail) {\n      return (\n        <SurveyList\n          onDetailsClick={(id) => {\n            return setdata({ showSurveyDetail: true, surveyId: id });\n          }}\n          surveys={surveys}\n        />\n      );\n    } else {\n      return (\n        <SurveyDetail\n          currentSurvey={renderSurveyDetail(data.surveyId)}\n          onReturnClick={() => {\n            return setdata({ showSurveyDetail: false, surveyId: \"\" });\n          }}\n        />\n      );\n    }\n  }\n\n  function renderContent() {\n    return (\n      <div>\n        {renderSurveyIntro()}\n        {renderSurveys()}\n      </div>\n    );\n  }\n  return <div>{renderContent()}</div>;\n}\n\nfunction mapStateToProps({ surveys }) {\n  return { surveys };\n}\n\nexport default connect(mapStateToProps, { fetchSurveys })(Surveys);","import { Link } from \"react-router-dom\";\nimport \"./Dashboard.css\";\nimport Surveys from \"./surveys/Surveys\";\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <Surveys />\n      <div className=\"fixed-action-btn\">\n        <Link to=\"/surveys/new\" className=\"btn btn-danger\">\n          <div>New Survey</div>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","const re =\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n// emailregex.com\n\nconst validateEmails = (emails) => {\n  const invalidEmails = emails\n    .split(\",\")\n    .map((email) => email.trim())\n    .filter((email) => re.test(email) === false);\n\n  if (invalidEmails.length) {\n    return false;\n  }\n  return true;\n};\n\nexport default validateEmails;\n","// SurveyForm shows a form for a user to add input\nimport { useForm } from \"react-hook-form\";\nimport { formData } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport validateEmails from \"./validateEmails\";\nimport { connect } from \"react-redux\";\n\nconst SurveyForm = ({ onSurveySubmit, formData, PreviousformData }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: \"onBlur\",\n    defaultValues: PreviousformData,\n  });\n\n  const onSubmit = (data) => {\n    onSurveySubmit();\n    formData(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"mb-3\">\n        <label for=\"title\" className=\"form-label\">\n          Survey Title\n        </label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          className=\"form-control\"\n          {...register(\"title\", { required: true })}\n        />\n        <div style={{ color: \"red\" }}>\n          {errors.title?.type === \"required\" &&\n            \"You must provide a survey title\"}\n        </div>\n      </div>\n      <div className=\"mb-3\">\n        <label for=\"subject\" className=\"form-label\">\n          Subject Line\n        </label>\n        <input\n          type=\"text\"\n          id=\"subject\"\n          className=\"form-control\"\n          {...register(\"subject\", { required: true })}\n        />\n        <div style={{ color: \"red\" }}>\n          {errors.subject?.type === \"required\" &&\n            \"You must provide a subject line\"}\n        </div>\n      </div>\n      <div className=\"mb-3\">\n        <label for=\"body\" className=\"form-label\">\n          Email Body\n        </label>\n        <input\n          type=\"text\"\n          id=\"body\"\n          className=\"form-control\"\n          {...register(\"body\", { required: true })}\n        />\n        <div style={{ color: \"red\" }}>\n          {errors.body?.type === \"required\" && \"You must provide a email body\"}\n        </div>\n      </div>\n      <div className=\"mb-3\">\n        <label for=\"recipients\" className=\"form-label\">\n          Recipient Email List\n        </label>\n        <input\n          type=\"text\"\n          id=\"recipients\"\n          className=\"form-control\"\n          {...register(\"recipients\", {\n            validate: validateEmails,\n          })}\n        />\n        <div id=\"emailHelp\" className=\"form-text\">\n          Each email must be seperated by a comma ,\n        </div>\n        <div style={{ color: \"red\" }}>\n          {errors.recipients?.type === \"validate\" && \"These emails are invalid\"}\n        </div>\n      </div>\n\n      <Link className=\"btn btn-danger\" to=\"/surveys\">\n        <i className=\"bi bi-x-lg\"></i>\n        {\"  \"}\n        Cancel\n      </Link>\n\n      <button type=\"submit\" className=\"btn btn-success float-end\">\n        <i className=\"bi bi-chevron-right\"></i>\n        {\"  \"}\n        Next\n      </button>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { PreviousformData: state.formData };\n};\nexport default connect(mapStateToProps, { formData })(SurveyForm);","// SurveyFormReview shows users their form inputs for review\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nimport { Link } from \"react-router-dom\";\n\nconst SurveyReview = ({ onCancel, formValues, submitSurvey }) => {\n  return (\n    <div>\n      <h5>Please confirm your entries</h5>\n      <div>\n        <label className=\"form-text\">Survey Title</label>\n        <div>{formValues.title}</div>\n      </div>\n      <div>\n        <label className=\"form-text\">Subject Line</label>\n        <div>{formValues.subject}</div>\n      </div>\n      <div>\n        <label className=\"form-text\">Email Body</label>\n        <div>{formValues.body}</div>\n      </div>\n      <div>\n        <label className=\"form-text\">Recipient Email List</label>\n        <div>{formValues.recipients}</div>\n      </div>\n      <br />\n      <button onClick={onCancel} className=\"btn btn-danger\">\n        <span className=\"btn-label\">\n          <i className=\"bi bi-arrow-90deg-left\"></i>\n        </span>\n        {\"  \"}Back\n      </button>\n\n      <Link\n        className=\"btn btn-success float-end\"\n        onClick={() => submitSurvey(formValues)}\n        to=\"/\"\n      >\n        <i className=\"bi bi-envelope-fill\"></i> {\"  \"}Send Survey\n      </Link>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { formValues: state.formData };\n};\n\nexport default connect(mapStateToProps, actions)(SurveyReview);\n","// Survey new shows SurveyForm and SurveyForm Review\nimport SurveyForm from \"./SurveyForm\";\nimport SurveyFormReview from \"./SurveyFormReview\";\nimport { useState } from \"react\";\n\nconst SurveyNew = () => {\n  const [showFormReview, setShowFormReview] = useState(false);\n\n  function renderForm() {\n    if (showFormReview) {\n      return <SurveyFormReview onCancel={() => setShowFormReview(false)} />;\n    }\n\n    return <SurveyForm onSurveySubmit={() => setShowFormReview(true)} />;\n  }\n\n  return (\n    <div className=\"row justify-content-md-center\">\n      <div className=\"col-6\">\n        <h1 className=\"text-center\">Create New Survey</h1>\n        <p className=\"text-center\">\n          {showFormReview\n            ? \"Please review the following entries\"\n            : \"Please fill out the following entries\"}\n        </p>\n        {renderForm()}\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n    </div>\n  );\n};\n\nexport default SurveyNew;\n","import StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nconst Payments = (props) => {\n  return (\n    <StripeCheckout\n      name=\"Emaily\"\n      description=\"$5 for 5 email credits\"\n      amount={500}\n      token={(token) => props.handleToken(token)}\n      // stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      stripeKey=\"pk_test_wd6JOemZHTRKYwKJiobuPppm\"\n    >\n      <button className=\"btn btn-primary\">Add Credits</button>\n    </StripeCheckout>\n  );\n};\n\nexport default connect(null, actions)(Payments);\n","import { connect } from 'react-redux';\nimport Payments from './Payments';\n\nconst Credits = ({ auth }) => {\n  function renderCredits() {\n    if (auth) {\n      return <span>{auth.credits}</span>;\n    } else {\n      return <span>None</span>;\n    }\n  }\n\n  function renderCreditsIntro() {\n    return (\n      <div className=\"alert alert-info\" role=\"alert\">\n        Purchase credits which are required to create new Surveys.\n      </div>\n    );\n  }\n\n  function renderQuickInfoCard() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Quick Info</h5>\n          <p className=\"card-text\">\n            This is a demo version of the application. Therefore we don't accept\n            any REAL financial information.\n          </p>\n          <p className=\"card-text\">\n            To purchase Credits click on the Add Credits button and enter the\n            following details :\n          </p>\n          <ul>\n            <li>\n              <blockquote>Email: Your Email</blockquote>\n            </li>\n            <li>\n              <blockquote>Card Number: 4242 4242 4242 4242</blockquote>\n            </li>\n            <li>\n              <blockquote>Card Exp (MM/YY): Any Valid Date</blockquote>\n            </li>\n            <li>\n              <blockquote>CVV: Any 3 digit number</blockquote>\n            </li>\n          </ul>\n          <p>\n            <b>Note: We do not store your personal/financial information.</b>\n          </p>\n        </div>\n      </div>\n    );\n  }\n  function renderCreditsInfoCard() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Credit Info</h5>\n          <blockquote>\n            <b>Available Credits : {renderCredits()}</b>\n          </blockquote>\n          <button className=\"btn btn-primary\">\n            <Payments />\n          </button>\n        </div>\n      </div>\n    );\n  }\n  function renderContent() {\n    return (\n      <>\n        {renderCreditsIntro()}\n        <section className=\"section\">\n          <div className=\"row\">\n            <div className=\"col s12 m8\">{renderQuickInfoCard()}</div>\n            <div className=\"col s12 m4\">{renderCreditsInfoCard()}</div>\n          </div>\n        </section>\n      </>\n    );\n  }\n\n  return <>{renderContent()}</>;\n};\n\nfunction mapStateToProps({ auth }) {\n  return {\n    auth,\n  };\n}\nexport default connect(mapStateToProps)(Credits);\n","import { useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport Header from './Header';\nimport Landing from './Landing';\nimport Dashboard from './Dashboard';\nimport SurveyNew from './surveys/SurveyNew';\nimport Credits from './Credits';\n\nimport Payments from './Payments';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.fetchUser();\n  });\n\n  return (\n    <BrowserRouter basename=\"/\">\n      <Header />\n      <div className=\"container\">\n        <br />\n        <Routes>\n          <Route path=\"/card\" element={<Payments />} />\n          <Route path=\"/\" element={<Landing />} />\n          <Route path=\"/credits\" element={<Credits />} />\n          <Route path=\"/surveys\" element={<Dashboard />} />\n          <Route path=\"/surveys/new\" element={<SurveyNew />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default connect(null, actions)(App);\n","import { combineReducers } from 'redux';\n// import { reducer as reduxForm } from 'redux-form';\nimport authReducer from './authReducer';\nimport surveysReducer from './surveysReducer';\nimport formDataReducer from './formDataReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n   formData: formDataReducer,\n  surveys: surveysReducer,\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function (state = null, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      //payload is the user model, use false so we dont return an empty string\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","import { FORM_DATA } from \"../actions/types\";\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case FORM_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { FETCH_SURVEYS } from \"../actions/types\";\n\nexport default function (state = [], action) {\n  switch (action.type) {\n    case FETCH_SURVEYS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  {},\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}